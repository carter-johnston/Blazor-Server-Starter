@page "/"
@page "/weather"
@using BlazorServerStarter.Utility

@inject IWeatherForecastService WeatherForecastService

<PageTitle>Weather Forecast</PageTitle>

<div class="display-6">Weather Forecast</div>
<div class="lead">
    This component demonstrates showing data.
</div>

<div class="overflow-scroll">
    <FluentDataGrid
        @ref="GridRef"
        Items=@ForecastByHour
        ResizableColumns="true"
        Virtualize="true" 
        ItemSize="54" 
        Style="height: 80vh;">
        <ChildContent>

            <PropertyColumn  
                Title="Time Recorded"
                Property="@(wf => wf.Time)" 
                Align="Align.Start"
                Sortable="true" />

            <TemplateColumn Title="">
                @(context.TemperatureInC) °C
            </TemplateColumn>

            <TemplateColumn Title="">
                @(context.FeelsLikeTemperatureInF) °F
            </TemplateColumn>

            <TemplateColumn
                Style="Width: 200px"
                Tooltip="true" 
                TooltipText="@(wf => wf.Condition.Text)" 
                Title="">
               <FluentEmoji 
                   Value="@(WeatherForecastUtil.TranslateWeatherConditionToEmoji(context.Condition.Text))">
               </FluentEmoji>
               <span class="text-muted">
                    @context.Condition.Text
               </span>
            </TemplateColumn>

            <PropertyColumn Title="Cloud Cover" Property="@(wf => wf.Cloud)" Sortable="true" />
            <PropertyColumn Title="UV" Property="@(wf => wf.UltraVioletLevel)" Sortable="true" />
            <PropertyColumn Property="@(wf => wf.ChanceOfRain)" Sortable="true" />
            <PropertyColumn Property="@(wf => wf.FeelsLikeTemperatureInF)" Sortable="true" />
            <PropertyColumn Property="@(wf => wf.HeatIndexInF)" Sortable="true" />
            <PropertyColumn Property="@(wf => wf.Humidity)" Sortable="true" />
            <PropertyColumn Property="@(wf => wf.PressureInMillibars)" Sortable="true" />
            <PropertyColumn Property="@(wf => wf.WillItRain)" Sortable="true" />
            <PropertyColumn Property="@(wf => wf.WindDirection)" Sortable="true" />
        </ChildContent>
        <EmptyContent>
            <FluentIcon 
                Value="@(new Icons.Filled.Size24.Crown())" 
                Color="@Color.Accent" />
                &nbsp; Nothing to see here. Carry on!
        </EmptyContent>
        <LoadingContent>
            <FluentStack 
                Orientation="Orientation.Vertical" 
                HorizontalAlignment="HorizontalAlignment.Center">
                Loading...<br />
                <FluentProgress Width="240px" />
            </FluentStack>
        </LoadingContent>
    </FluentDataGrid>
</div>

@code {
    private FluentDataGrid<Hour>? GridRef;
    private WeatherForecast? weatherForecast;
    private IQueryable<Hour>? ForecastByHour;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            GridRef?.SetLoadingState(true);
            StateHasChanged();

            var weatherForecast = await WeatherForecastService.GetForecastForJacksonvilleAsync();

            ForecastByHour = weatherForecast?.Forecast?.ForecastDay?.FirstOrDefault()?.Hour?.AsQueryable();              
            
            GridRef?.SetLoadingState(false);
            StateHasChanged();
        }
    }
}